[buildout]
extends =
    base.cfg
    checkouts.cfg

find-links +=
    http://infrae.com/download/simple/

show-picked-versions = true

parts +=
    test
    test_dontcall
    testxml
    testxml_dontcall
    solr-download
    solr-instance
    solr-test-instance
    omelette
    translation
    podiff
    checkversions
    instancepy

eggs +=
    experimental.gracefulblobmissing
    Products.enablesettrace
    Products.PrintingMailHost
#    pdbpp

[instancepy]
# A python interpreter with access to the same eggs as the instance,
# can be used for running certain tests e.g. 
# bin/instancepy src/recensio.policy/recensio/policy/tests/testSparql.py
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = instancepy
scripts =

[translation]
recipe = infrae.i18nextract
packages =
    recensio.contenttypes
    recensio.policy
    recensio.theme
    recensio.altertum
    recensio.artium
    recensio.regio
#output = ${buildout:directory}/src/recensio.translations/recensio/translations/locales/templates/LC_MESSAGES/
output-package = recensio.translations
domain = recensio
# This adds two scripts to manage translation strings, we only need to
# use translation-extract. See https://syslab.com/proj/documents/53
# for details on how to update translations
#
#  1. translation-extract
# This extracts msgids from the packages configured above and adds them to
# recensio.pot in the output directory. Beware, new msgids should not
# be added to the pot file manually, as they will be clobbered
#
#  2. translation-manage -m
#
# BEWARE: infrae.i18nextract skips the locales/en folder (hardcoded)
# You need to run the step below manually for en
#
# User of Mac OS might run into this problem:
# http://subcommanderblog.wordpress.com/2009/05/16/msgmerge-on-macosx-and-no-such-file-or-directory/
# They need to run msgmerge manually and pass the additional parameter --backup=off
# Example
# ~/recensio.translations/recensio/translations/locales$ msgmerge -U --backup=off de/LC_MESSAGES/recensio.po recensio.pot

[podiff]
recipe = zc.recipe.egg:scripts
eggs = recensio.translations[podiff]
arguments = '${sources:recensio.translations}'

[checkversions]
recipe = zc.recipe.egg:scripts
eggs = z3c.checkversions [buildout]

[zeo]
recipe = plone.recipe.zeoserver
blob-storage = ${buildout:directory}/var/blobstorage
zeo-address = ${settings:zeo-address}
pack-days = 10

[instance-settings]
shared-blob = on
eggs +=
    plone.reload
zcml +=
    plone.reload
zcml-additional =
    <include package="plone.app.async" file="single_db_instance.zcml" />

[instance]
<= instance-settings
debug-mode = on
verbose-security = on
environment-vars +=
    zope_i18n_compile_mo_files true
    RUN_SHELL_COMMANDS true
    MEMCACHE_SERVER 127.0.0.1:11211
zserver-threads = 1

[manager-instance]
<= instance-settings
debug-mode = on
verbose-security = on
zeo-client-client =
environment-vars +=
    zope_i18n_compile_mo_files true
    RUN_SHELL_COMMANDS true
    MEMCACHE_SERVER 127.0.0.1:11211
zserver-threads = 1

[worker]
zcml-additional =
    <include package="plone.app.async" file="single_db_worker.zcml" />
zope-conf-additional =

[supervisor]
recipe = collective.recipe.supervisor
port = 9002
serverurl = http://localhost:9002
programs =
    10 zeo      ${buildout:directory}/bin/runzeo [-C ${buildout:directory}/parts/zeo/etc/zeo.conf] true
    10 solr     (stdout_logfile=${buildout:directory}/var/log/solr.log stderr_logfile=${buildout:directory}/var/log/solr.log) /usr/bin/env [java -Xms512m -Xmx2048m -jar start.jar --module=http jetty.host=${solr-instance:host} jetty.port=${solr-instance:port}] ${solr-instance:location} true
    30 worker   (stdout_logfile=${buildout:directory}/var/log/worker.log stderr_logfile=${buildout:directory}/var/log/worker.log) ${buildout:directory}/bin/worker [console] true

[versions]
# lxml 3.2.3 does not build with recent versions of the libxml2/libxslt.
# Using this version experimentally in dev:
lxml = 3.8.0
